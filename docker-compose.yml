version: '3.4'

services:
  consul:
    image: consul
    container_name: consul_server
    restart: always
    ports:
      - 8300:8300
      - 8301:8301
      - 8302:8302
      - 8400:8400
      - 8500:8500
      - 53:53
      - 8600:8600

  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - 6380:6379
    command: redis-server --requirepass 123456
    volumes:
     - ./redis-data:/data

  rabbitmq:
    image: rabbitmq:management
    container_name: Rabbitmq
    restart: always
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=123456
      - TZ=Asia/Shanghai


  mysql:
    image: mysql:latest
    container_name: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: ShopDB
      TZ: Asia/Shanghai
    ports:
      - 3306:3306
    volumes:
      - ./mysql-data:/var/lib/mysql
    
  
  shop.goods.service:
    image: ${DOCKER_REGISTRY-}shopgoodsservice
    container_name: Shop.Goods.Service
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    ports:
      - 5002:5002
    build:
      context: .
      dockerfile: src/Shop.GoodsService/Dockerfile
    depends_on:
      - consul
      - mysql
    links:
      - consul
      - mysql

  shop.identity.service:
    image: ${DOCKER_REGISTRY-}shopidentityservice
    container_name: Shop.Identity.Service
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    build:
      context: .
      dockerfile: src/Shop.IdentityService/Dockerfile
    depends_on:
      - consul
      - mysql
    links:
      - consul
      - mysql
    ports:
      - 5003:5003

  shop.basket.service:
    image: ${DOCKER_REGISTRY-}shopbasketservice
    container_name: Shop.Basket.Service
    build:
      context: .
      dockerfile: src/Shop.BasketService/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
      - uragano_server_addr={LOCALIP}
      - uragano_server_port=5004
      - uragano_server_weight=100
      - uragano_service_id={LOCALIP}:{uragano_server_port}
      - uragano_service_name=Shop.Basket
      - uragano_consul_addr=http://consul:8500
      - uragano_consul_token=5ece74af-19d1-0e61-b25c-b9665d29f50b
    ports:
      - 5004:5004
    depends_on:
      - consul
      - redis
      - rabbitmq
      - mysql
    links:
      - consul
      - redis
      - rabbitmq
      - mysql

  shop.order.service:
    image: ${DOCKER_REGISTRY-}shoporderservice
    container_name: shop.order.service
    build:
      context: .
      dockerfile: src/Shop.OrderService/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    ports:
      - 5005:5005
    depends_on:
      - consul
      - rabbitmq
      - mysql
    links:
      - consul
      - rabbitmq
      - mysql
      
  shop.gateway.web:
    image: ${DOCKER_REGISTRY-}shopgatewayweb
    container_name: Shop.Gateway.Web
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    build:
      context: .
      dockerfile: src/Shop.Gateway.Web/Dockerfile
    ports:
      - 9001:80
    depends_on:
      - consul   
      - shop.gateway.goods
      - shop.gateway.identity
      - shop.gateway.basket
    links:
      - consul
      - shop.gateway.goods
      - shop.gateway.identity
      - shop.gateway.basket


  shop.gateway.goods:
    image: ${DOCKER_REGISTRY-}shopgatewaygoods
    container_name: Shop.Gateway.Goods
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    build:
      context: .
      dockerfile: src/Shop.Gateway.Goods/Dockerfile
    ports:
      - 8002:80
    depends_on:
      - consul   
    links:
      - consul

  shop.gateway.identity:
    image: ${DOCKER_REGISTRY-}shopgatewayidentity
    container_name: Shop.Gateway.Identity
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    build:
      context: .
      dockerfile: src/Shop.Gateway.Identity/Dockerfile
    ports:
      - 8003:80
    depends_on:
      - consul
    links:
      - consul


  shop.gateway.basket:
    image: ${DOCKER_REGISTRY-}shopgatewaybasket
    container_name: Shop.Gateway.Basket
    build:
      context: .
      dockerfile: src/Shop.Gateway.Basket/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    ports:
      - 8004:80
    depends_on:
      - consul
    links:
      - consul


  shop.gateway.order:
    image: ${DOCKER_REGISTRY-}shopgatewayorder
    container_name: Shop.Gateway.Order
    build:
      context: .
      dockerfile: src/Shop.Gateway.Order/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - TZ=Asia/Shanghai
    ports:
      - 8005:80
    depends_on:
      - consul
    links:
      - consul

